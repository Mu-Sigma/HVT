% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoreHVT.R
\name{scoreHVT}
\alias{scoreHVT}
\title{Score which cell each point in the test dataset belongs to.}
\usage{
scoreHVT(
  data,
  hvt.results.model,
  child.level = 1,
  mad.threshold = 0.2,
  line.width = c(0.6, 0.4, 0.2),
  color.vec = c("navyblue", "slateblue", "lavender"),
  normalize = TRUE,
  seed = 300,
  distance_metric = "L1_Norm",
  error_metric = "max",
  yVar = NULL
)
}
\arguments{
\item{data}{Dataframe. A dataframe containing the test dataset. The dataframe should have all the variable(features) used for training.}

\item{hvt.results.model}{List. A list obtained from the trainHVT function while performing hierarchical vector quantization 
on training data. This list provides an overview of the hierarchical vector quantized data, including diagnostics, tessellation details, 
Sammon's projection coordinates, and model input information.}

\item{child.level}{Numeric. A number indicating the depth for which the heat map is to be plotted. Each depth represents a
different level of clustering or partitioning of the data.}

\item{mad.threshold}{Numeric. A numeric value indicating the permissible Mean Absolute Deviation which is obtained from
Minimum Intra centroid plot of diagnostics.}

\item{line.width}{Vector. A vector indicating the line widths of the tessellation boundaries for each layer.}

\item{color.vec}{Vector. A vector indicating the colors of the tessellations boundaries at each layer.}

\item{normalize}{Logical. A logical value indicating if the dataset should be normalized. When set to TRUE,
the data (testing dataset) is standardized by ‘mean’ and ‘sd’ of the training dataset referred from the trainHVT(). 
When set to FALSE, the data is used as such without any changes.}

\item{seed}{Numeric. Random Seed.}

\item{distance_metric}{Character. The distance metric can be `L1_Norm`(Manhattan) or `L2_Norm`(Eucledian). 
`L1_Norm` is selected by default. The distance metric is used to calculate the distance between an 
`n` dimensional point and centroid. The distance metric can be different from the one used during training.}

\item{error_metric}{Character. The error metric can be `mean` or `max`. `max` is selected by default. 
`max` will return the max of `m` values and `mean` will take mean of `m` values where each value is a distance 
between a point and centroid of the cell. The error metric can be different from the one used during training.}

\item{yVar}{Character. A character or a vector representing the name of the dependent variable(s)}
}
\value{
Dataframe containing scored data, plots and mean absolute deviation plots
}
\description{
This is the function scores the cell for each point in the test dataset based on a trained hierarchical Voronoi tessellations model. 
It provides scored data, plots, and mean absolute deviation plots, aiding in the evaluation of model performance.
}
\examples{
data("EuStockMarkets")
dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
                     DAX = EuStockMarkets[, "DAX"],
                     SMI = EuStockMarkets[, "SMI"],
                     CAC = EuStockMarkets[, "CAC"],
                     FTSE = EuStockMarkets[, "FTSE"])
rownames(EuStockMarkets) <- dataset$date
# Split in train and test
train <- EuStockMarkets[1:1302, ]
test <- EuStockMarkets[1303:1860, ]
#model training
hvt.results<- trainHVT(train,n_cells = 60, depth = 1, quant.err = 0.1,
                      distance_metric = "L1_Norm", error_metric = "max",
                      normalize = TRUE,quant_method = "kmeans")
scoring <- scoreHVT(test, hvt.results)
data_scored <- scoring$scoredPredictedData
}
\seealso{
\code{\link{trainHVT}} \cr \code{\link{plotHVT}}
}
\author{
Shubhra Prakash <shubhra.prakash@mu-sigma.com>, Sangeet Moy Das <sangeet.das@mu-sigma.com>
}
\keyword{Scoring}
