% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoreHVT.R
\name{scoreHVT}
\alias{scoreHVT}
\title{Predict which cell and what level each point in the test dataset belongs to.}
\usage{
scoreHVT(
  data,
  hvt.results.model,
  child.level = 1,
  mad.threshold = 0.2,
  line.width = c(0.6, 0.4, 0.2),
  color.vec = c("#141B41", "#6369D1", "#D8D2E1"),
  normalize = TRUE,
  seed = 300,
  distance_metric = "L1_Norm",
  error_metric = "max",
  yVar = NULL
)
}
\arguments{
\item{data}{List. A dataframe containing test dataset. The dataframe should have atleast one variable used while training. The variables from
this dataset can also be used to overlay as heatmap}

\item{hvt.results.model}{A list of hvt results  obtained from trainHVT function while performing hierarchical vector quantization on train data}

\item{child.level}{A number indicating the level for which the heat map is to be plotted.(Only used if hmap.cols is not NULL)}

\item{mad.threshold}{A numeric values indicating the permissible Mean Absolute Deviation}

\item{line.width}{Vector. A line width vector}

\item{color.vec}{Vector. A color vector}

\item{normalize}{Logical. A logical value indicating if the columns in your
dataset should be normalized. Default value is TRUE.}

\item{seed}{Numeric. Random Seed.}

\item{distance_metric}{Character. The distance metric can be 'Euclidean" or "Manhattan". Euclidean is selected by default.}

\item{error_metric}{Character. The error metric can be "mean" or "max". mean is selected by default}

\item{yVar}{Character. Name of the dependent variable(s)}
}
\value{
Dataframe containing scored predicted data, prediction plots and mean absolute deviation plots
}
\description{
This is the function predicts the cell and level for each point in the test dataset based on a hierarchical Voronoi tessellations model. 
It provides scored predicted data, prediction plots, and mean absolute deviation plots, aiding in the evaluation of model performance.
}
\examples{
data("EuStockMarkets")
dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
                     DAX = EuStockMarkets[, "DAX"],
                     SMI = EuStockMarkets[, "SMI"],
                     CAC = EuStockMarkets[, "CAC"],
                     FTSE = EuStockMarkets[, "FTSE"])
rownames(EuStockMarkets) <- dataset$date
# Split in train and test
train <- EuStockMarkets[1:1302, ]
test <- EuStockMarkets[1303:1860, ]
hvt_summary <- list()
hvt_summary<- trainHVT(train,n_cells = 15, depth = 1, quant.err = 0.2,
                      distance_metric = "L1_Norm", error_metric = "mean",
                      projection.scale = 10, normalize = TRUE,seed = 123,
                      quant_method = "kmeans")
predictions <- scoreHVT(test, hvt_summary, child.level = 2, mad.threshold = 0.2)
data_predictions <- predictions$scoredPredictedData
}
\seealso{
\code{\link{trainHVT}} \cr \code{\link{plotHVT}}
}
\author{
Shubhra Prakash <shubhra.prakash@mu-sigma.com>, Sangeet Moy Das <sangeet.das@mu-sigma.com>
}
\keyword{Scoring}
