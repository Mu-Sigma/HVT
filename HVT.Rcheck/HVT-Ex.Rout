
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "HVT"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "HVT-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('HVT')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("VQ_codebookSplit")
> ### * VQ_codebookSplit
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: VQ_codebookSplit
> ### Title: VQ_codebookSplit
> ### Aliases: VQ_codebookSplit
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> 
> data("iris", package = "datasets")
> iris <- iris[, 1:2]
> 
> vqOutput <- VQ_codebookSplit(iris, quant.err = 0.5)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("VQ_codebookSplit", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("displayTable")
> ### * displayTable
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: displayTable
> ### Title: Table for displaying summary
> ### Aliases: displayTable
> ### Keywords: EDA
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                       DAX = EuStockMarkets[, "DAX"],
+                       SMI = EuStockMarkets[, "SMI"],
+                       CAC = EuStockMarkets[, "CAC"],
+                       FTSE = EuStockMarkets[, "FTSE"])
> hvt.results<- trainHVT(dataset,n_cells = 60, depth = 1, quant.err = 0.1,
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method = "kmeans")
Loading required namespace: deldir
Loading required namespace: Hmisc
Loading required namespace: splancs
Loading required namespace: conf.design
> displayTable(data = hvt.results[[3]]$compression_summary,
+ columnName = 'percentOfCellsBelowQuantizationErrorThreshold', 
+ value = 0.8, tableType = "compression")
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:250px; overflow-x: scroll; width:100%; "><table class="table table-striped table-hover table-responsive" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> segmentLevel </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> noOfCells </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> noOfCellsBelowQuantizationError </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> percentOfCellsBelowQuantizationErrorThreshold </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> parameters </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 60 </td>
   <td style="text-align:center;"> 52 </td>
   <td style="text-align:center;"> <span style="     color: green !important;">0.87</span> </td>
   <td style="text-align:center;"> n_cells: 60 quant.err: 0.1 distance_metric: L1_Norm error_metric: max quant_method: kmeans </td>
  </tr>
</tbody>
</table></div>> 
> displayTable(data =hvt.results[[3]][['summary']], columnName= 'Quant.Error',
+  value = 0.1, tableType = "summary")
<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; overflow-x: scroll; width:100%; "><table class="table table-striped table-hover table-responsive" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> Segment.Level </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> Segment.Parent </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> Segment.Child </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> n </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> Cell.ID </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> Quant.Error </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> date </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> DAX </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> SMI </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> CAC </th>
   <th style="text-align:center;position: sticky; top:0; background-color: #FFFFFF;"> FTSE </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 38 </td>
   <td style="text-align:center;"> 19 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -0.59 </td>
   <td style="text-align:center;"> -0.45 </td>
   <td style="text-align:center;"> -0.41 </td>
   <td style="text-align:center;"> -0.15 </td>
   <td style="text-align:center;"> -0.45 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 2 </td>
   <td style="text-align:center;"> 50 </td>
   <td style="text-align:center;"> 23 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -0.09 </td>
   <td style="text-align:center;"> -0.41 </td>
   <td style="text-align:center;"> -0.47 </td>
   <td style="text-align:center;"> -0.50 </td>
   <td style="text-align:center;"> -0.50 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 3 </td>
   <td style="text-align:center;"> 33 </td>
   <td style="text-align:center;"> 47 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.12</span> </td>
   <td style="text-align:center;"> 1.31 </td>
   <td style="text-align:center;"> 1.25 </td>
   <td style="text-align:center;"> 1.30 </td>
   <td style="text-align:center;"> 1.04 </td>
   <td style="text-align:center;"> 1.32 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 4 </td>
   <td style="text-align:center;"> 48 </td>
   <td style="text-align:center;"> 28 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 0.18 </td>
   <td style="text-align:center;"> -0.40 </td>
   <td style="text-align:center;"> -0.36 </td>
   <td style="text-align:center;"> -0.50 </td>
   <td style="text-align:center;"> -0.25 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 5 </td>
   <td style="text-align:center;"> 14 </td>
   <td style="text-align:center;"> 49 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 1.41 </td>
   <td style="text-align:center;"> 1.45 </td>
   <td style="text-align:center;"> 1.58 </td>
   <td style="text-align:center;"> 1.11 </td>
   <td style="text-align:center;"> 1.49 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 6 </td>
   <td style="text-align:center;"> 16 </td>
   <td style="text-align:center;"> 22 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -0.31 </td>
   <td style="text-align:center;"> -0.37 </td>
   <td style="text-align:center;"> -0.38 </td>
   <td style="text-align:center;"> -0.35 </td>
   <td style="text-align:center;"> -0.57 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 7 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> 17 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.04</span> </td>
   <td style="text-align:center;"> -0.68 </td>
   <td style="text-align:center;"> -0.56 </td>
   <td style="text-align:center;"> -0.54 </td>
   <td style="text-align:center;"> -0.11 </td>
   <td style="text-align:center;"> -0.51 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 8 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> 52 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 1.43 </td>
   <td style="text-align:center;"> 1.53 </td>
   <td style="text-align:center;"> 1.69 </td>
   <td style="text-align:center;"> 1.23 </td>
   <td style="text-align:center;"> 1.63 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 9 </td>
   <td style="text-align:center;"> 30 </td>
   <td style="text-align:center;"> 8 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.08</span> </td>
   <td style="text-align:center;"> -1.22 </td>
   <td style="text-align:center;"> -0.75 </td>
   <td style="text-align:center;"> -0.91 </td>
   <td style="text-align:center;"> -0.61 </td>
   <td style="text-align:center;"> -1.08 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 10 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> 13 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.04</span> </td>
   <td style="text-align:center;"> -0.80 </td>
   <td style="text-align:center;"> -0.82 </td>
   <td style="text-align:center;"> -0.68 </td>
   <td style="text-align:center;"> -0.60 </td>
   <td style="text-align:center;"> -0.73 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 11 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -0.27 </td>
   <td style="text-align:center;"> -0.46 </td>
   <td style="text-align:center;"> -0.48 </td>
   <td style="text-align:center;"> -0.53 </td>
   <td style="text-align:center;"> -0.62 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 12 </td>
   <td style="text-align:center;"> 43 </td>
   <td style="text-align:center;"> 40 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 0.85 </td>
   <td style="text-align:center;"> 0.16 </td>
   <td style="text-align:center;"> 0.25 </td>
   <td style="text-align:center;"> -0.11 </td>
   <td style="text-align:center;"> 0.43 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 13 </td>
   <td style="text-align:center;"> 38 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.36 </td>
   <td style="text-align:center;"> -0.33 </td>
   <td style="text-align:center;"> -0.18 </td>
   <td style="text-align:center;"> -0.74 </td>
   <td style="text-align:center;"> -0.04 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 14 </td>
   <td style="text-align:center;"> 40 </td>
   <td style="text-align:center;"> 25 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> -0.22 </td>
   <td style="text-align:center;"> -0.34 </td>
   <td style="text-align:center;"> -0.47 </td>
   <td style="text-align:center;"> -0.32 </td>
   <td style="text-align:center;"> -0.41 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 15 </td>
   <td style="text-align:center;"> 32 </td>
   <td style="text-align:center;"> 12 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -0.90 </td>
   <td style="text-align:center;"> -0.81 </td>
   <td style="text-align:center;"> -0.75 </td>
   <td style="text-align:center;"> -0.52 </td>
   <td style="text-align:center;"> -0.75 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 16 </td>
   <td style="text-align:center;"> 36 </td>
   <td style="text-align:center;"> 20 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -0.11 </td>
   <td style="text-align:center;"> -0.46 </td>
   <td style="text-align:center;"> -0.50 </td>
   <td style="text-align:center;"> -0.59 </td>
   <td style="text-align:center;"> -0.56 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 17 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -1.51 </td>
   <td style="text-align:center;"> -0.89 </td>
   <td style="text-align:center;"> -1.04 </td>
   <td style="text-align:center;"> -0.87 </td>
   <td style="text-align:center;"> -1.16 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> 13 </td>
   <td style="text-align:center;"> 34 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.03</span> </td>
   <td style="text-align:center;"> 0.47 </td>
   <td style="text-align:center;"> -0.17 </td>
   <td style="text-align:center;"> -0.04 </td>
   <td style="text-align:center;"> -0.53 </td>
   <td style="text-align:center;"> 0.14 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 19 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> 48 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.1</span> </td>
   <td style="text-align:center;"> 1.24 </td>
   <td style="text-align:center;"> 1.43 </td>
   <td style="text-align:center;"> 1.37 </td>
   <td style="text-align:center;"> 1.21 </td>
   <td style="text-align:center;"> 1.37 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 20 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> 54 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.12</span> </td>
   <td style="text-align:center;"> 1.49 </td>
   <td style="text-align:center;"> 1.89 </td>
   <td style="text-align:center;"> 2.13 </td>
   <td style="text-align:center;"> 1.77 </td>
   <td style="text-align:center;"> 2.14 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> 35 </td>
   <td style="text-align:center;"> 2 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> -1.70 </td>
   <td style="text-align:center;"> -0.84 </td>
   <td style="text-align:center;"> -1.00 </td>
   <td style="text-align:center;"> -0.81 </td>
   <td style="text-align:center;"> -1.04 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 22 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> 39 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 0.78 </td>
   <td style="text-align:center;"> 0.03 </td>
   <td style="text-align:center;"> 0.17 </td>
   <td style="text-align:center;"> -0.37 </td>
   <td style="text-align:center;"> 0.32 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 23 </td>
   <td style="text-align:center;"> 17 </td>
   <td style="text-align:center;"> 55 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.12</span> </td>
   <td style="text-align:center;"> 1.53 </td>
   <td style="text-align:center;"> 2.17 </td>
   <td style="text-align:center;"> 2.32 </td>
   <td style="text-align:center;"> 2.32 </td>
   <td style="text-align:center;"> 2.32 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 24 </td>
   <td style="text-align:center;"> 28 </td>
   <td style="text-align:center;"> 36 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 0.65 </td>
   <td style="text-align:center;"> -0.05 </td>
   <td style="text-align:center;"> 0.13 </td>
   <td style="text-align:center;"> -0.43 </td>
   <td style="text-align:center;"> 0.12 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 25 </td>
   <td style="text-align:center;"> 29 </td>
   <td style="text-align:center;"> 15 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -0.75 </td>
   <td style="text-align:center;"> -0.70 </td>
   <td style="text-align:center;"> -0.60 </td>
   <td style="text-align:center;"> -0.44 </td>
   <td style="text-align:center;"> -0.72 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 26 </td>
   <td style="text-align:center;"> 34 </td>
   <td style="text-align:center;"> 14 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.03</span> </td>
   <td style="text-align:center;"> -0.89 </td>
   <td style="text-align:center;"> -0.78 </td>
   <td style="text-align:center;"> -0.73 </td>
   <td style="text-align:center;"> -0.40 </td>
   <td style="text-align:center;"> -0.71 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 27 </td>
   <td style="text-align:center;"> 24 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.60 </td>
   <td style="text-align:center;"> -0.03 </td>
   <td style="text-align:center;"> 0.13 </td>
   <td style="text-align:center;"> -0.26 </td>
   <td style="text-align:center;"> 0.19 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 28 </td>
   <td style="text-align:center;"> 8 </td>
   <td style="text-align:center;"> 57 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.12</span> </td>
   <td style="text-align:center;"> 1.72 </td>
   <td style="text-align:center;"> 2.70 </td>
   <td style="text-align:center;"> 2.61 </td>
   <td style="text-align:center;"> 2.98 </td>
   <td style="text-align:center;"> 2.01 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 29 </td>
   <td style="text-align:center;"> 19 </td>
   <td style="text-align:center;"> 45 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 1.13 </td>
   <td style="text-align:center;"> 0.98 </td>
   <td style="text-align:center;"> 1.04 </td>
   <td style="text-align:center;"> 0.74 </td>
   <td style="text-align:center;"> 1.06 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 30 </td>
   <td style="text-align:center;"> 44 </td>
   <td style="text-align:center;"> 29 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> -0.49 </td>
   <td style="text-align:center;"> -0.33 </td>
   <td style="text-align:center;"> -0.21 </td>
   <td style="text-align:center;"> 0.09 </td>
   <td style="text-align:center;"> -0.14 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> 41 </td>
   <td style="text-align:center;"> 3 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> -1.18 </td>
   <td style="text-align:center;"> -0.89 </td>
   <td style="text-align:center;"> -0.96 </td>
   <td style="text-align:center;"> -0.83 </td>
   <td style="text-align:center;"> -1.24 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 32 </td>
   <td style="text-align:center;"> 54 </td>
   <td style="text-align:center;"> 38 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 0.66 </td>
   <td style="text-align:center;"> 0.02 </td>
   <td style="text-align:center;"> 0.16 </td>
   <td style="text-align:center;"> -0.20 </td>
   <td style="text-align:center;"> 0.20 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 33 </td>
   <td style="text-align:center;"> 28 </td>
   <td style="text-align:center;"> 46 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.11</span> </td>
   <td style="text-align:center;"> 1.21 </td>
   <td style="text-align:center;"> 1.07 </td>
   <td style="text-align:center;"> 1.20 </td>
   <td style="text-align:center;"> 0.89 </td>
   <td style="text-align:center;"> 1.16 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 34 </td>
   <td style="text-align:center;"> 36 </td>
   <td style="text-align:center;"> 27 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> -0.47 </td>
   <td style="text-align:center;"> -0.37 </td>
   <td style="text-align:center;"> -0.31 </td>
   <td style="text-align:center;"> -0.05 </td>
   <td style="text-align:center;"> -0.31 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 35 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> 41 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 0.92 </td>
   <td style="text-align:center;"> 0.30 </td>
   <td style="text-align:center;"> 0.32 </td>
   <td style="text-align:center;"> 0.10 </td>
   <td style="text-align:center;"> 0.50 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 36 </td>
   <td style="text-align:center;"> 16 </td>
   <td style="text-align:center;"> 60 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.1</span> </td>
   <td style="text-align:center;"> 1.69 </td>
   <td style="text-align:center;"> 3.25 </td>
   <td style="text-align:center;"> 2.91 </td>
   <td style="text-align:center;"> 3.57 </td>
   <td style="text-align:center;"> 2.53 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> 50 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 1.23 </td>
   <td style="text-align:center;"> 1.67 </td>
   <td style="text-align:center;"> 1.49 </td>
   <td style="text-align:center;"> 1.35 </td>
   <td style="text-align:center;"> 1.41 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 38 </td>
   <td style="text-align:center;"> 29 </td>
   <td style="text-align:center;"> 16 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -0.67 </td>
   <td style="text-align:center;"> -0.60 </td>
   <td style="text-align:center;"> -0.57 </td>
   <td style="text-align:center;"> -0.20 </td>
   <td style="text-align:center;"> -0.58 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 39 </td>
   <td style="text-align:center;"> 34 </td>
   <td style="text-align:center;"> 35 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.51 </td>
   <td style="text-align:center;"> -0.09 </td>
   <td style="text-align:center;"> -0.06 </td>
   <td style="text-align:center;"> -0.43 </td>
   <td style="text-align:center;"> 0.18 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 40 </td>
   <td style="text-align:center;"> 35 </td>
   <td style="text-align:center;"> 56 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.14</span> </td>
   <td style="text-align:center;"> 1.57 </td>
   <td style="text-align:center;"> 2.50 </td>
   <td style="text-align:center;"> 2.50 </td>
   <td style="text-align:center;"> 2.85 </td>
   <td style="text-align:center;"> 2.48 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 41 </td>
   <td style="text-align:center;"> 30 </td>
   <td style="text-align:center;"> 5 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.04</span> </td>
   <td style="text-align:center;"> -1.45 </td>
   <td style="text-align:center;"> -0.79 </td>
   <td style="text-align:center;"> -0.97 </td>
   <td style="text-align:center;"> -0.63 </td>
   <td style="text-align:center;"> -1.06 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 42 </td>
   <td style="text-align:center;"> 13 </td>
   <td style="text-align:center;"> 53 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.12</span> </td>
   <td style="text-align:center;"> 1.45 </td>
   <td style="text-align:center;"> 1.67 </td>
   <td style="text-align:center;"> 1.83 </td>
   <td style="text-align:center;"> 1.41 </td>
   <td style="text-align:center;"> 1.77 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 43 </td>
   <td style="text-align:center;"> 32 </td>
   <td style="text-align:center;"> 43 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 1.03 </td>
   <td style="text-align:center;"> 0.65 </td>
   <td style="text-align:center;"> 0.67 </td>
   <td style="text-align:center;"> 0.61 </td>
   <td style="text-align:center;"> 0.75 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 44 </td>
   <td style="text-align:center;"> 32 </td>
   <td style="text-align:center;"> 9 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -1.36 </td>
   <td style="text-align:center;"> -0.72 </td>
   <td style="text-align:center;"> -0.92 </td>
   <td style="text-align:center;"> -0.45 </td>
   <td style="text-align:center;"> -1.00 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 45 </td>
   <td style="text-align:center;"> 66 </td>
   <td style="text-align:center;"> 4 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -1.61 </td>
   <td style="text-align:center;"> -0.85 </td>
   <td style="text-align:center;"> -1.01 </td>
   <td style="text-align:center;"> -0.64 </td>
   <td style="text-align:center;"> -0.99 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 46 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> 7 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.03</span> </td>
   <td style="text-align:center;"> -1.37 </td>
   <td style="text-align:center;"> -0.75 </td>
   <td style="text-align:center;"> -0.93 </td>
   <td style="text-align:center;"> -0.51 </td>
   <td style="text-align:center;"> -1.15 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 47 </td>
   <td style="text-align:center;"> 34 </td>
   <td style="text-align:center;"> 33 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.43 </td>
   <td style="text-align:center;"> -0.26 </td>
   <td style="text-align:center;"> -0.08 </td>
   <td style="text-align:center;"> -0.64 </td>
   <td style="text-align:center;"> 0.08 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 48 </td>
   <td style="text-align:center;"> 22 </td>
   <td style="text-align:center;"> 51 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.08</span> </td>
   <td style="text-align:center;"> 1.32 </td>
   <td style="text-align:center;"> 1.52 </td>
   <td style="text-align:center;"> 1.44 </td>
   <td style="text-align:center;"> 1.34 </td>
   <td style="text-align:center;"> 1.71 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 49 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> 11 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.04</span> </td>
   <td style="text-align:center;"> -1.30 </td>
   <td style="text-align:center;"> -0.71 </td>
   <td style="text-align:center;"> -0.88 </td>
   <td style="text-align:center;"> -0.34 </td>
   <td style="text-align:center;"> -0.90 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 50 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> 32 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.04</span> </td>
   <td style="text-align:center;"> 0.31 </td>
   <td style="text-align:center;"> -0.24 </td>
   <td style="text-align:center;"> -0.24 </td>
   <td style="text-align:center;"> -0.60 </td>
   <td style="text-align:center;"> -0.03 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 51 </td>
   <td style="text-align:center;"> 16 </td>
   <td style="text-align:center;"> 42 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.06</span> </td>
   <td style="text-align:center;"> 0.98 </td>
   <td style="text-align:center;"> 0.44 </td>
   <td style="text-align:center;"> 0.45 </td>
   <td style="text-align:center;"> 0.38 </td>
   <td style="text-align:center;"> 0.67 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 52 </td>
   <td style="text-align:center;"> 50 </td>
   <td style="text-align:center;"> 21 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.08</span> </td>
   <td style="text-align:center;"> 0.03 </td>
   <td style="text-align:center;"> -0.43 </td>
   <td style="text-align:center;"> -0.48 </td>
   <td style="text-align:center;"> -0.71 </td>
   <td style="text-align:center;"> -0.54 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 53 </td>
   <td style="text-align:center;"> 68 </td>
   <td style="text-align:center;"> 10 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.09</span> </td>
   <td style="text-align:center;"> -1.02 </td>
   <td style="text-align:center;"> -0.92 </td>
   <td style="text-align:center;"> -0.82 </td>
   <td style="text-align:center;"> -0.74 </td>
   <td style="text-align:center;"> -0.82 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 54 </td>
   <td style="text-align:center;"> 31 </td>
   <td style="text-align:center;"> 24 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.10 </td>
   <td style="text-align:center;"> -0.52 </td>
   <td style="text-align:center;"> -0.50 </td>
   <td style="text-align:center;"> -0.61 </td>
   <td style="text-align:center;"> -0.39 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 55 </td>
   <td style="text-align:center;"> 18 </td>
   <td style="text-align:center;"> 59 </td>
   <td style="text-align:center;"> <span style="     color: red !important;">0.13</span> </td>
   <td style="text-align:center;"> 1.68 </td>
   <td style="text-align:center;"> 3.05 </td>
   <td style="text-align:center;"> 2.74 </td>
   <td style="text-align:center;"> 3.36 </td>
   <td style="text-align:center;"> 2.38 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 56 </td>
   <td style="text-align:center;"> 37 </td>
   <td style="text-align:center;"> 30 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> 0.26 </td>
   <td style="text-align:center;"> -0.28 </td>
   <td style="text-align:center;"> -0.32 </td>
   <td style="text-align:center;"> -0.49 </td>
   <td style="text-align:center;"> -0.10 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 57 </td>
   <td style="text-align:center;"> 45 </td>
   <td style="text-align:center;"> 26 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.05</span> </td>
   <td style="text-align:center;"> -0.36 </td>
   <td style="text-align:center;"> -0.29 </td>
   <td style="text-align:center;"> -0.36 </td>
   <td style="text-align:center;"> -0.14 </td>
   <td style="text-align:center;"> -0.46 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 58 </td>
   <td style="text-align:center;"> 30 </td>
   <td style="text-align:center;"> 44 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.07</span> </td>
   <td style="text-align:center;"> 1.07 </td>
   <td style="text-align:center;"> 0.79 </td>
   <td style="text-align:center;"> 0.79 </td>
   <td style="text-align:center;"> 0.67 </td>
   <td style="text-align:center;"> 0.82 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 59 </td>
   <td style="text-align:center;"> 27 </td>
   <td style="text-align:center;"> 6 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.09</span> </td>
   <td style="text-align:center;"> -1.10 </td>
   <td style="text-align:center;"> -0.97 </td>
   <td style="text-align:center;"> -0.90 </td>
   <td style="text-align:center;"> -0.91 </td>
   <td style="text-align:center;"> -0.99 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 1 </td>
   <td style="text-align:center;"> 60 </td>
   <td style="text-align:center;"> 25 </td>
   <td style="text-align:center;"> 58 </td>
   <td style="text-align:center;"> <span style="     color: black !important;">0.08</span> </td>
   <td style="text-align:center;"> 1.63 </td>
   <td style="text-align:center;"> 2.81 </td>
   <td style="text-align:center;"> 2.51 </td>
   <td style="text-align:center;"> 3.14 </td>
   <td style="text-align:center;"> 2.35 </td>
  </tr>
</tbody>
</table></div>> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("displayTable", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("edaPlots")
> ### * edaPlots
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: edaPlots
> ### Title: plots for data analysis
> ### Aliases: edaPlots
> ### Keywords: EDA
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                       DAX = EuStockMarkets[, "DAX"],
+                       SMI = EuStockMarkets[, "SMI"],
+                       CAC = EuStockMarkets[, "CAC"],
+                       FTSE = EuStockMarkets[, "FTSE"])
> edaPlots(dataset, time_series = TRUE, time_column = 'date')
Warning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.
ℹ Please use `after_stat(count)` instead.
ℹ The deprecated feature was likely used in the HVT package.
  Please report the issue at <https://github.com/Mu-Sigma/HVT/issues>.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: Use of `data[[column]]` is discouraged.
ℹ Use `.data[[column]]` instead.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
<table class="table table-striped table-hover table-responsive" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:center;"> variable </th>
   <th style="text-align:center;"> min </th>
   <th style="text-align:center;"> 1st Quartile </th>
   <th style="text-align:center;"> median </th>
   <th style="text-align:center;"> mean </th>
   <th style="text-align:center;"> sd </th>
   <th style="text-align:center;"> 3rd Quartile </th>
   <th style="text-align:center;"> max </th>
   <th style="text-align:center;"> hist </th>
   <th style="text-align:center;"> n_row </th>
   <th style="text-align:center;"> n_missing </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:center;"> date </td>
   <td style="text-align:center;"> 1991.496 </td>
   <td style="text-align:center;"> 1993.284 </td>
   <td style="text-align:center;"> 1995.071 </td>
   <td style="text-align:center;"> 1995.071 </td>
   <td style="text-align:center;"> 2.0657 </td>
   <td style="text-align:center;"> 1996.859 </td>
   <td style="text-align:center;"> 1998.646 </td>
   <td style="text-align:center;"> ▇▇▇▇▇ </td>
   <td style="text-align:center;"> 1860 </td>
   <td style="text-align:center;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> DAX </td>
   <td style="text-align:center;"> 1402.340 </td>
   <td style="text-align:center;"> 1744.102 </td>
   <td style="text-align:center;"> 2140.565 </td>
   <td style="text-align:center;"> 2530.657 </td>
   <td style="text-align:center;"> 1084.7927 </td>
   <td style="text-align:center;"> 2722.367 </td>
   <td style="text-align:center;"> 6186.090 </td>
   <td style="text-align:center;"> ▇▂▂▁▁ </td>
   <td style="text-align:center;"> 1860 </td>
   <td style="text-align:center;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> SMI </td>
   <td style="text-align:center;"> 1587.400 </td>
   <td style="text-align:center;"> 2165.625 </td>
   <td style="text-align:center;"> 2796.350 </td>
   <td style="text-align:center;"> 3376.224 </td>
   <td style="text-align:center;"> 1663.0265 </td>
   <td style="text-align:center;"> 3812.425 </td>
   <td style="text-align:center;"> 8412.000 </td>
   <td style="text-align:center;"> ▇▃▁▁▁ </td>
   <td style="text-align:center;"> 1860 </td>
   <td style="text-align:center;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> CAC </td>
   <td style="text-align:center;"> 1611.000 </td>
   <td style="text-align:center;"> 1875.150 </td>
   <td style="text-align:center;"> 1992.300 </td>
   <td style="text-align:center;"> 2227.829 </td>
   <td style="text-align:center;"> 580.3142 </td>
   <td style="text-align:center;"> 2274.350 </td>
   <td style="text-align:center;"> 4388.500 </td>
   <td style="text-align:center;"> ▇▂▁▁▁ </td>
   <td style="text-align:center;"> 1860 </td>
   <td style="text-align:center;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:center;"> FTSE </td>
   <td style="text-align:center;"> 2281.000 </td>
   <td style="text-align:center;"> 2843.150 </td>
   <td style="text-align:center;"> 3246.600 </td>
   <td style="text-align:center;"> 3565.643 </td>
   <td style="text-align:center;"> 976.7155 </td>
   <td style="text-align:center;"> 3993.575 </td>
   <td style="text-align:center;"> 6179.000 </td>
   <td style="text-align:center;"> ▇▇▂▂▂ </td>
   <td style="text-align:center;"> 1860 </td>
   <td style="text-align:center;"> 0 </td>
  </tr>
</tbody>
</table>> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("edaPlots", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("getTransitionProbability")
> ### * getTransitionProbability
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: getTransitionProbability
> ### Title: Creating Transition Probabilities list
> ### Aliases: getTransitionProbability
> ### Keywords: Transition_or_Prediction
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                       DAX = EuStockMarkets[, "DAX"],
+                       SMI = EuStockMarkets[, "SMI"],
+                       CAC = EuStockMarkets[, "CAC"],
+                       FTSE = EuStockMarkets[, "FTSE"])
> hvt.results<- trainHVT(dataset,n_cells = 60, depth = 1, quant.err = 0.1,
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method = "kmeans")
> scoring <- scoreHVT(dataset, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> cell_id <- scoring$scoredPredictedData$Cell.ID
> time_stamp <- dataset$date
> dataset <- data.frame(cell_id, time_stamp)
> table <- getTransitionProbability(dataset, cellid_column = "cell_id",time_column = "time_stamp")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("getTransitionProbability", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("hvq")
> ### * hvq
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: hvq
> ### Title: hvq
> ### Aliases: hvq
> ### Keywords: internal
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+ DAX = EuStockMarkets[, "DAX"],
+ SMI = EuStockMarkets[, "SMI"],
+ CAC = EuStockMarkets[, "CAC"],
+ FTSE = EuStockMarkets[, "FTSE"])
> dataset_hvt <- dataset[,-c(1)]
> hvqOutput = hvq(dataset_hvt, n_cells = 5, depth = 2, quant.err = 0.2,
+ distance_metric='L1_Norm',error_metric='mean',quant_method="kmeans")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("hvq", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("madPlot")
> ### * madPlot
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: madPlot
> ### Title: Mean Absolute Deviation Plot
> ### Aliases: madPlot
> ### Keywords: internal
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                      DAX = EuStockMarkets[, "DAX"],
+                      SMI = EuStockMarkets[, "SMI"],
+                      CAC = EuStockMarkets[, "CAC"],
+                      FTSE = EuStockMarkets[, "FTSE"])
> #adding this step especially for this function
> rownames(EuStockMarkets) <- dataset$date
> train <- EuStockMarkets[1:1302, ]
> test <- EuStockMarkets[1303:1860, ]
> hvt_summary <- list()
> hvt_summary<- trainHVT(train,n_cells = 15, depth = 1, quant.err = 0.2,
+                       distance_metric = "L1_Norm", error_metric = "mean",
+                       projection.scale = 10, normalize = TRUE,seed = 123,
+                       quant_method = "kmeans")
> score_var <- scoreHVT(test, hvt_summary, child.level = 2, mad.threshold = 0.2)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> madPlot(hvt.scoring=score_var)
Warning: Removed 1 row containing missing values or values outside the scale range
(`geom_vline()`).
Warning: Removed 1 row containing missing values or values outside the scale range
(`geom_text()`).
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("madPlot", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotAnimatedFlowmap")
> ### * plotAnimatedFlowmap
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotAnimatedFlowmap
> ### Title: Generating flow maps and animations based on transition
> ###   probabilities
> ### Aliases: plotAnimatedFlowmap
> ### Keywords: Transition_or_Prediction
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                       DAX = EuStockMarkets[, "DAX"],
+                       SMI = EuStockMarkets[, "SMI"],
+                       CAC = EuStockMarkets[, "CAC"],
+                       FTSE = EuStockMarkets[, "FTSE"])
>                       
> hvt.results<- trainHVT(dataset,n_cells = 60, depth = 1, quant.err = 0.1,
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method = "kmeans")
>                        
> scoring <- scoreHVT(dataset, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> cell_id <- scoring$scoredPredictedData$Cell.ID
> time_stamp <- dataset$date
> dataset <- data.frame(cell_id, time_stamp)
> 
> table <- getTransitionProbability(dataset, cellid_column = "cell_id",time_column = "time_stamp")
> plots <- plotAnimatedFlowmap(hvt_model_output = hvt.results, transition_probability_df = table,
+ df = dataset, animation = 'All', flow_map = 'All',fps_time = 1,fps_state =  1,time_duration = 2,
+ state_duration = 2,cellid_column = "cell_id", time_column = "time_stamp")
Warning: `data_frame()` was deprecated in tibble 1.1.0.
ℹ Please use `tibble()` instead.
ℹ The deprecated feature was likely used in the HVT package.
  Please report the issue at <https://github.com/Mu-Sigma/HVT/issues>.
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotAnimatedFlowmap", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotHVT")
> ### * plotHVT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotHVT
> ### Title: Plot the hierarchical tessellations.
> ### Aliases: plotHVT
> ### Keywords: Tessellation_and_Heatmap
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> hvt.results <- trainHVT(EuStockMarkets, n_cells = 60, depth = 1, quant.err = 0.1, 
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method="kmeans")
>                        
> #change the 'plot.type' argument to '2Dproj' or '2DHVT' to visualize respective plots.                      
> plotHVT(hvt.results, plot.type='1D')
> 
> #change the 'plot.type' argument to 'surface_plot' to visualize the Interactive surface plot                   
> plotHVT(hvt.results,child.level = 1, 
+ hmap.cols = "DAX", plot.type = '2Dheatmap')
Warning in ggplot2::geom_polygon(data = data, ggplot2::aes(x = x, y = y,  :
  Ignoring unknown aesthetics: text
Warning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in
ggplot2 3.3.4.
ℹ Please use "none" instead.
ℹ The deprecated feature was likely used in the HVT package.
  Please report the issue at <https://github.com/Mu-Sigma/HVT/issues>.
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotHVT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotModelDiagnostics")
> ### * plotModelDiagnostics
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotModelDiagnostics
> ### Title: Make the diagnostic plots for hierarchical voronoi tessellations
> ### Aliases: plotModelDiagnostics
> ### Keywords: Diagnostics_or_Validation
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> hvt.results <- trainHVT(EuStockMarkets, n_cells = 60, depth = 1, quant.err = 0.1, 
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method="kmeans",diagnose = TRUE, 
+                        hvt_validation = TRUE)
Check MAD parameter has been set to TRUE, the train data will be randomly split by the ratio of  80:20
Loading required namespace: reshape2
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> plotModelDiagnostics(hvt.results)
Warning: `stat(density)` was deprecated in ggplot2 3.4.0.
ℹ Please use `after_stat(density)` instead.
ℹ The deprecated feature was likely used in the HVT package.
  Please report the issue at <https://github.com/Mu-Sigma/HVT/issues>.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Warning: No shared levels found between `names(values)` of the manual scale and the
data's linetype values.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotModelDiagnostics", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotNovelCells")
> ### * plotNovelCells
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotNovelCells
> ### Title: Plot the identified outlier cell(s) in the voronoi tessellation
> ###   map.
> ### Aliases: plotNovelCells
> ### Keywords: Novelty_or_Outliers
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> hvt.results <- trainHVT(EuStockMarkets, n_cells = 60, depth = 1, quant.err = 0.1, 
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method="kmeans")
> #selected 55,58 are for demo purpose
> plotNovelCells(c(55,58),hvt.results)
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotNovelCells", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotQuantErrorHistogram")
> ### * plotQuantErrorHistogram
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotQuantErrorHistogram
> ### Title: Make the quantization error plots for training and scoring.
> ### Aliases: plotQuantErrorHistogram
> ### Keywords: Diagnostics_or_Validation
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                      DAX = EuStockMarkets[, "DAX"],
+                      SMI = EuStockMarkets[, "SMI"],
+                      CAC = EuStockMarkets[, "CAC"],
+                      FTSE = EuStockMarkets[, "FTSE"])
> rownames(EuStockMarkets) <- dataset$date
> #Split in train and test
> train <- EuStockMarkets[1:1302, ]
> test <- EuStockMarkets[1303:1860, ]
> 
> hvt.results<- trainHVT(train,n_cells = 60, depth = 1, quant.err = 0.1,
+                       distance_metric = "L1_Norm", error_metric = "max",
+                       normalize = TRUE, quant_method = "kmeans")
> scoring <- scoreHVT(test, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> plotQuantErrorHistogram(hvt.results, scoring) 
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotQuantErrorHistogram", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("plotStateTransition")
> ### * plotStateTransition
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: plotStateTransition
> ### Title: Creating State Transition Plot
> ### Aliases: plotStateTransition
> ### Keywords: Transition_or_Prediction
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+ DAX = EuStockMarkets[, "DAX"],
+ SMI = EuStockMarkets[, "SMI"],
+ CAC = EuStockMarkets[, "CAC"],
+ FTSE = EuStockMarkets[, "FTSE"])
> 
> hvt.results<- trainHVT(dataset,n_cells = 60, depth = 1, quant.err = 0.1,
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method = "kmeans")
> scoring <- scoreHVT(dataset, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> cell_id <- scoring$scoredPredictedData$Cell.ID
> time_stamp <- dataset$date
> dataset <- data.frame(cell_id, time_stamp)
> 
> plotStateTransition(dataset, sample_size = 1, cellid_column = "cell_id",time_column = "time_stamp")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("plotStateTransition", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("reconcileTransitionProbability")
> ### * reconcileTransitionProbability
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: reconcileTransitionProbability
> ### Title: Reconciliation of Transition Probability
> ### Aliases: reconcileTransitionProbability
> ### Keywords: Diagnostics_or_Validation
> 
> ### ** Examples
> 
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                       DAX = EuStockMarkets[, "DAX"],
+                       SMI = EuStockMarkets[, "SMI"],
+                       CAC = EuStockMarkets[, "CAC"],
+                       FTSE = EuStockMarkets[, "FTSE"])
> 
> hvt.results<- trainHVT(dataset,n_cells = 60, depth = 1, quant.err = 0.1,
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method = "kmeans")
> scoring <- scoreHVT(dataset, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> cell_id <- scoring$scoredPredictedData$Cell.ID
> time_stamp <- dataset$date
> dataset <- data.frame(cell_id, time_stamp)
> 
> reconcileTransitionProbability(dataset, hmap_type = "All", 
+ cellid_column = "cell_id", time_column = "time_stamp")
[[1]]

[[2]]
   Current_State Next_State_manual Next_State_markov
1              1                 5                 5
2              2                 4                 4
3              3                 8                 8
4              4                 1                 1
5              4                 2                 2
6              5                 9                 9
7              6                10                10
8              7                 9                 9
9              8                 3                 3
10             8                 6                 6
11             8                 9                 9
12             9                 7                 7
13             9                 8                 8
14             9                11                11
15            10                 6                 6
16            10                12                12
17            11                 9                 9
18            12                13                13
19            12                14                14
20            13                15                15
21            14                12                12
22            15                16                16
23            16                17                17
24            17                16                16
25            17                19                19
26            18                23                23
27            19                27                27
28            20                21                21
29            20                23                23
30            21                24                24
31            22                18                18
32            23                20                20
33            23                25                25
34            24                28                28
35            25                23                23
36            26                22                22
37            27                26                26
38            27                29                29
39            28                30                30
40            29                27                27
41            30                32                32
42            31                33                33
43            32                31                31
44            33                34                34
45            34                35                35
46            35                34                34
47            35                37                37
48            36                37                37
49            36                39                39
50            37                36                36
51            37                38                38
52            38                36                36
53            38                37                37
54            39                40                40
55            40                39                39
56            40                41                41
57            41                40                40
58            41                42                42
59            42                43                43
60            43                44                44
61            44                43                43
62            44                45                45
63            45                46                46
64            46                45                45
65            46                47                47
66            46                48                48
67            47                46                46
68            47                48                48
69            47                49                49
70            48                47                47
71            48                50                50
72            48                51                51
73            49                47                47
74            49                52                52
75            50                48                48
76            51                47                47
77            51                48                48
78            52                49                49
79            52                53                53
80            53                52                52
81            53                54                54
82            54                55                55
83            55                54                54
84            55                56                56
85            56                55                55
86            56                58                58
87            57                58                58
88            58                56                56
89            58                57                57
90            58                59                59
91            59                57                57
92            59                58                58
93            59                60                60
94            60                59                59
   Probability_manual_calculation Probability_markov_function    diff
1                          0.0270                      0.0270  0.0000
2                          0.0571                      0.0588 -0.0017
3                          0.0476                      0.0476  0.0000
4                          0.0152                      0.0152  0.0000
5                          0.0152                      0.0152  0.0000
6                          0.0333                      0.0333  0.0000
7                          0.1250                      0.1250  0.0000
8                          0.0476                      0.0476  0.0000
9                          0.0800                      0.0800  0.0000
10                         0.0400                      0.0400  0.0000
11                         0.0400                      0.0400  0.0000
12                         0.0294                      0.0294  0.0000
13                         0.0588                      0.0588  0.0000
14                         0.0294                      0.0294  0.0000
15                         0.0469                      0.0469  0.0000
16                         0.0156                      0.0156  0.0000
17                         0.0323                      0.0323  0.0000
18                         0.0333                      0.0333  0.0000
19                         0.1000                      0.1000  0.0000
20                         0.0323                      0.0323  0.0000
21                         0.0811                      0.0811  0.0000
22                         0.0345                      0.0345  0.0000
23                         0.1034                      0.1034  0.0000
24                         0.0952                      0.0952  0.0000
25                         0.0476                      0.0476  0.0000
26                         0.0476                      0.0476  0.0000
27                         0.0256                      0.0256  0.0000
28                         0.0323                      0.0323  0.0000
29                         0.2581                      0.2581  0.0000
30                         0.0200                      0.0200  0.0000
31                         0.0625                      0.0625  0.0000
32                         0.1698                      0.1698  0.0000
33                         0.0189                      0.0189  0.0000
34                         0.0323                      0.0323  0.0000
35                         0.0238                      0.0238  0.0000
36                         0.0227                      0.0227  0.0000
37                         0.0278                      0.0278  0.0000
38                         0.0556                      0.0556  0.0000
39                         0.0208                      0.0208  0.0000
40                         0.0455                      0.0455  0.0000
41                         0.0278                      0.0278  0.0000
42                         0.0263                      0.0263  0.0000
43                         0.0526                      0.0526  0.0000
44                         0.0294                      0.0294  0.0000
45                         0.2143                      0.2143  0.0000
46                         0.0606                      0.0606  0.0000
47                         0.0303                      0.0303  0.0000
48                         0.0714                      0.0714  0.0000
49                         0.0357                      0.0357  0.0000
50                         0.0833                      0.0833  0.0000
51                         0.1250                      0.1250  0.0000
52                         0.0185                      0.0185  0.0000
53                         0.0370                      0.0370  0.0000
54                         0.0541                      0.0541  0.0000
55                         0.0233                      0.0233  0.0000
56                         0.1163                      0.1163  0.0000
57                         0.1081                      0.1081  0.0000
58                         0.0270                      0.0270  0.0000
59                         0.0625                      0.0625  0.0000
60                         0.1250                      0.1250  0.0000
61                         0.1000                      0.1000  0.0000
62                         0.0333                      0.0333  0.0000
63                         0.0833                      0.0833  0.0000
64                         0.0435                      0.0435  0.0000
65                         0.1739                      0.1739  0.0000
66                         0.0435                      0.0435  0.0000
67                         0.1333                      0.1333  0.0000
68                         0.1000                      0.1000  0.0000
69                         0.0667                      0.0667  0.0000
70                         0.0909                      0.0909  0.0000
71                         0.0909                      0.0909  0.0000
72                         0.0606                      0.0606  0.0000
73                         0.0667                      0.0667  0.0000
74                         0.2667                      0.2667  0.0000
75                         0.1667                      0.1667  0.0000
76                         0.0455                      0.0455  0.0000
77                         0.0455                      0.0455  0.0000
78                         0.1667                      0.1667  0.0000
79                         0.1667                      0.1667  0.0000
80                         0.1538                      0.1538  0.0000
81                         0.0769                      0.0769  0.0000
82                         0.0952                      0.0952  0.0000
83                         0.0556                      0.0556  0.0000
84                         0.1111                      0.1111  0.0000
85                         0.0294                      0.0294  0.0000
86                         0.0588                      0.0588  0.0000
87                         0.1667                      0.2000 -0.0333
88                         0.0385                      0.0385  0.0000
89                         0.0385                      0.0385  0.0000
90                         0.0769                      0.0769  0.0000
91                         0.0556                      0.0556  0.0000
92                         0.0556                      0.0556  0.0000
93                         0.0556                      0.0556  0.0000
94                         0.0625                      0.0625  0.0000

[[3]]

[[4]]
   Current_State Next_State_manual Next_State_markov
1              1                 5                 5
2              2                 4                 4
3              3                 8                 8
4              4                 1                 1
5              4                 2                 2
6              5                 9                 9
7              6                10                10
8              7                 9                 9
9              8                 3                 3
10             8                 6                 6
11             8                 9                 9
12             9                 7                 7
13             9                 8                 8
14             9                11                11
15            10                 6                 6
16            10                12                12
17            11                 9                 9
18            12                13                13
19            12                14                14
20            13                15                15
21            14                12                12
22            15                16                16
23            16                17                17
24            17                16                16
25            17                19                19
26            18                23                23
27            19                27                27
28            20                21                21
29            20                23                23
30            21                24                24
31            22                18                18
32            23                20                20
33            23                25                25
34            24                28                28
35            25                23                23
36            26                22                22
37            27                26                26
38            27                29                29
39            28                30                30
40            29                27                27
41            30                32                32
42            31                33                33
43            32                31                31
44            33                34                34
45            34                35                35
46            35                34                34
47            35                37                37
48            36                37                37
49            36                39                39
50            37                36                36
51            37                38                38
52            38                36                36
53            38                37                37
54            39                40                40
55            40                39                39
56            40                41                41
57            41                40                40
58            41                42                42
59            42                43                43
60            43                44                44
61            44                43                43
62            44                45                45
63            45                46                46
64            46                45                45
65            46                47                47
66            46                48                48
67            47                46                46
68            47                48                48
69            47                49                49
70            48                47                47
71            48                50                50
72            48                51                51
73            49                47                47
74            49                52                52
75            50                48                48
76            51                47                47
77            51                48                48
78            52                49                49
79            52                53                53
80            53                52                52
81            53                54                54
82            54                55                55
83            55                54                54
84            55                56                56
85            56                55                55
86            56                58                58
87            57                58                58
88            58                56                56
89            58                57                57
90            58                59                59
91            59                57                57
92            59                58                58
93            59                60                60
94            60                59                59
   Probability_manual_calculation Probability_markov_function    diff
1                          0.0270                      0.0270  0.0000
2                          0.0571                      0.0588 -0.0017
3                          0.0476                      0.0476  0.0000
4                          0.0152                      0.0152  0.0000
5                          0.0152                      0.0152  0.0000
6                          0.0333                      0.0333  0.0000
7                          0.1250                      0.1250  0.0000
8                          0.0476                      0.0476  0.0000
9                          0.0800                      0.0800  0.0000
10                         0.0400                      0.0400  0.0000
11                         0.0400                      0.0400  0.0000
12                         0.0294                      0.0294  0.0000
13                         0.0588                      0.0588  0.0000
14                         0.0294                      0.0294  0.0000
15                         0.0469                      0.0469  0.0000
16                         0.0156                      0.0156  0.0000
17                         0.0323                      0.0323  0.0000
18                         0.0333                      0.0333  0.0000
19                         0.1000                      0.1000  0.0000
20                         0.0323                      0.0323  0.0000
21                         0.0811                      0.0811  0.0000
22                         0.0345                      0.0345  0.0000
23                         0.1034                      0.1034  0.0000
24                         0.0952                      0.0952  0.0000
25                         0.0476                      0.0476  0.0000
26                         0.0476                      0.0476  0.0000
27                         0.0256                      0.0256  0.0000
28                         0.0323                      0.0323  0.0000
29                         0.2581                      0.2581  0.0000
30                         0.0200                      0.0200  0.0000
31                         0.0625                      0.0625  0.0000
32                         0.1698                      0.1698  0.0000
33                         0.0189                      0.0189  0.0000
34                         0.0323                      0.0323  0.0000
35                         0.0238                      0.0238  0.0000
36                         0.0227                      0.0227  0.0000
37                         0.0278                      0.0278  0.0000
38                         0.0556                      0.0556  0.0000
39                         0.0208                      0.0208  0.0000
40                         0.0455                      0.0455  0.0000
41                         0.0278                      0.0278  0.0000
42                         0.0263                      0.0263  0.0000
43                         0.0526                      0.0526  0.0000
44                         0.0294                      0.0294  0.0000
45                         0.2143                      0.2143  0.0000
46                         0.0606                      0.0606  0.0000
47                         0.0303                      0.0303  0.0000
48                         0.0714                      0.0714  0.0000
49                         0.0357                      0.0357  0.0000
50                         0.0833                      0.0833  0.0000
51                         0.1250                      0.1250  0.0000
52                         0.0185                      0.0185  0.0000
53                         0.0370                      0.0370  0.0000
54                         0.0541                      0.0541  0.0000
55                         0.0233                      0.0233  0.0000
56                         0.1163                      0.1163  0.0000
57                         0.1081                      0.1081  0.0000
58                         0.0270                      0.0270  0.0000
59                         0.0625                      0.0625  0.0000
60                         0.1250                      0.1250  0.0000
61                         0.1000                      0.1000  0.0000
62                         0.0333                      0.0333  0.0000
63                         0.0833                      0.0833  0.0000
64                         0.0435                      0.0435  0.0000
65                         0.1739                      0.1739  0.0000
66                         0.0435                      0.0435  0.0000
67                         0.1333                      0.1333  0.0000
68                         0.1000                      0.1000  0.0000
69                         0.0667                      0.0667  0.0000
70                         0.0909                      0.0909  0.0000
71                         0.0909                      0.0909  0.0000
72                         0.0606                      0.0606  0.0000
73                         0.0667                      0.0667  0.0000
74                         0.2667                      0.2667  0.0000
75                         0.1667                      0.1667  0.0000
76                         0.0455                      0.0455  0.0000
77                         0.0455                      0.0455  0.0000
78                         0.1667                      0.1667  0.0000
79                         0.1667                      0.1667  0.0000
80                         0.1538                      0.1538  0.0000
81                         0.0769                      0.0769  0.0000
82                         0.0952                      0.0952  0.0000
83                         0.0556                      0.0556  0.0000
84                         0.1111                      0.1111  0.0000
85                         0.0294                      0.0294  0.0000
86                         0.0588                      0.0588  0.0000
87                         0.1667                      0.2000 -0.0333
88                         0.0385                      0.0385  0.0000
89                         0.0385                      0.0385  0.0000
90                         0.0769                      0.0769  0.0000
91                         0.0556                      0.0556  0.0000
92                         0.0556                      0.0556  0.0000
93                         0.0556                      0.0556  0.0000
94                         0.0625                      0.0625  0.0000

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("reconcileTransitionProbability", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("removeNovelty")
> ### * removeNovelty
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: removeNovelty
> ### Title: Remove identified novelty cell(s)
> ### Aliases: removeNovelty
> ### Keywords: Novelty_or_Outliers
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> hvt.results <- trainHVT(EuStockMarkets, n_cells = 60, depth = 1, quant.err = 0.1, 
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method="kmeans")
> identified_Novelty_cells <<- c(2, 10)
> output_list <- removeNovelty(identified_Novelty_cells, hvt.results) 
The following cell(s) have been removed as novelties from the dataset:  2 10
> data_with_novelty <- output_list[[1]]
> data_without_novelty <- output_list[[2]]                      
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("removeNovelty", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("scoreHVT")
> ### * scoreHVT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: scoreHVT
> ### Title: Score which cell each point in the test dataset belongs to.
> ### Aliases: scoreHVT
> ### Keywords: Scoring
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                      DAX = EuStockMarkets[, "DAX"],
+                      SMI = EuStockMarkets[, "SMI"],
+                      CAC = EuStockMarkets[, "CAC"],
+                      FTSE = EuStockMarkets[, "FTSE"])
> rownames(EuStockMarkets) <- dataset$date
> # Split in train and test
> train <- EuStockMarkets[1:1302, ]
> test <- EuStockMarkets[1303:1860, ]
> #model training
> hvt.results<- trainHVT(train,n_cells = 60, depth = 1, quant.err = 0.1,
+                       distance_metric = "L1_Norm", error_metric = "max",
+                       normalize = TRUE,quant_method = "kmeans")
> scoring <- scoreHVT(test, hvt.results)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> data_scored <- scoring$scoredPredictedData
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("scoreHVT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("scoreLayeredHVT")
> ### * scoreLayeredHVT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: scoreLayeredHVT
> ### Title: Score which cell and what layer each data point in the test
> ###   dataset belongs to
> ### Aliases: scoreLayeredHVT
> ### Keywords: Scoring
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> dataset <- data.frame(date = as.numeric(time(EuStockMarkets)),
+                      DAX = EuStockMarkets[, "DAX"],
+                      SMI = EuStockMarkets[, "SMI"],
+                      CAC = EuStockMarkets[, "CAC"],
+                      FTSE = EuStockMarkets[, "FTSE"])
> rownames(EuStockMarkets) <- dataset$date
> 
> train <- EuStockMarkets[1:1302, ]
> test <- EuStockMarkets[1303:1860, ]
> 
> ###MAP-A
> hvt_mapA <- trainHVT(train, n_cells = 150, depth = 1, quant.err = 0.1,
+                     distance_metric = "L1_Norm", error_metric = "max",
+                     normalize = TRUE,quant_method = "kmeans")
>                     
> identified_Novelty_cells <- c(127,55,83,61,44,35,27,77)
> output_list <- removeNovelty(identified_Novelty_cells, hvt_mapA)
The following cell(s) have been removed as novelties from the dataset:  127 55 83 61 44 35 27 77
> data_with_novelty <- output_list[[1]] 
> data_with_novelty <- data_with_novelty[, -c(1,2)]
> 
> ### MAP-B
> hvt_mapB <- trainHVT(data_with_novelty,n_cells = 10, depth = 1, quant.err = 0.1,
+                     distance_metric = "L1_Norm", error_metric = "max",
+                     normalize = TRUE,quant_method = "kmeans")
> data_without_novelty <- output_list[[2]]
> 
> ### MAP-C
> hvt_mapC <- trainHVT(data_without_novelty,n_cells = 135,
+                     depth = 1, quant.err = 0.1, distance_metric = "L1_Norm",
+                     error_metric = "max", quant_method = "kmeans",
+                     normalize = TRUE)
>                     
> ##SCORE LAYERED
> data_scored <- scoreLayeredHVT(test, hvt_mapA, hvt_mapB, hvt_mapC)
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Warning in data.frame(Segment.Level = x[["Segment.Level"]], Segment.Parent = x[["Segment.Parent"]],  :
  row names were found from a short variable and have been discarded
Scale for colour is already present.
Adding another scale for colour, which will replace the existing scale.
Warning in ggplot2::geom_label(label = centroidDataframe$outlier_cell, nudge_x = 0.45,  :
  Ignoring unknown parameters: `check_overlap`
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for y is already present.
Adding another scale for y, which will replace the existing scale.
Warning in geom_polygon(data = boundaryCoords2, aes(x = bp.x, y = bp.y,  :
  Ignoring unknown aesthetics: text
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("scoreLayeredHVT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("trainHVT")
> ### * trainHVT
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: trainHVT
> ### Title: Constructing Hierarchical Voronoi Tessellations
> ### Aliases: trainHVT
> ### Keywords: Training_or_Compression
> 
> ### ** Examples
> 
> data("EuStockMarkets")
> hvt.results <- trainHVT(EuStockMarkets, n_cells = 60, depth = 1, quant.err = 0.1, 
+                        distance_metric = "L1_Norm", error_metric = "max",
+                        normalize = TRUE,quant_method="kmeans")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("trainHVT", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  15.722 0.743 16.236 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
